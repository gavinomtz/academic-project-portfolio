/////////////////////////////////////////////////////////////////////
//
// Name: Gavino Martinez
// Date: 4/25/2024
// Class: CSCI 1470.06
// Semester: Spring 2024
// CSCI 1470 Instructor: Mr. Dietrich
//
// Program Description: Program that reads a file that consists of movies titles, the year they came out, and their revenue.
// It then outputs the movies in alphabetical order along with the other details in the file.
// The user can then input a movie title and it will output the title, year realeased, and revenue.
// Finally, the user is prompted if they would like to search for another movie or not.
/////////////////////////////////////////////////////////////////////

#include<iostream>
#include<iomanip>
#include<fstream>
#include<string>

using namespace std;

const int MOVIES_SIZE = 20;


// Declare a struct named Movie with 3 members for:
// title, year released, and revenue
struct Movie
{
    string title;
    int yearReleased;
    int revenue;
};


// Enter here your function prototypes
void storeMoviesArray(ifstream& inFile, Movie topMovies[], const int SIZE);
void sortMoviesTitle(Movie topMovies[], const int SIZE);
void printMoviesArray(const Movie topMovies[], const int SIZE);
int findMovieTitle(const Movie topMovies[], const int SIZE, string title);

// main() starts here
int main()
{
  // Declare file variable
    ifstream inFile;
  // Open file Movies.txt
    inFile.open("movies.txt");
  // Check if file was opened
    if (!inFile)
    {
        cout << "Error, file not found.";
        return 1;
    }
  // Declare array of movies
    Movie topMovies[MOVIES_SIZE];
  // Declare auxiliary variables
    string title;
    int search;
    char answer;
  // Read the information from the movies file and store it in the array
    storeMoviesArray(inFile, topMovies, MOVIES_SIZE);
  // Sort the array by the movie title so the binary search can be used 
    sortMoviesTitle(topMovies, MOVIES_SIZE);
  // Start the loop
    do{
    // Clear the screen
      cout << "\033[2J\033[1;1H";
    // Print the movies array
    printMoviesArray(topMovies, MOVIES_SIZE);
    // Ask the user to input a title
    cout << "\nEnter a movie title: ";
    cin >> title;
    // Find the index of the movie that the user chooses
    search = findMovieTitle(topMovies, MOVIES_SIZE, title);
    // If the movie was not found
    //		Print the message indicating the title was not found
    // Otherwise
    //		Print the information about the chosen movie
    if (search == -1)
    {
        cout << endl << endl << title << " was not found\n\n";
    }
    else
    {
        cout << "\n\nTitle: " << topMovies[search].title << "\nYear released: " << topMovies[search].yearReleased 
        << "\nRevenue: $" << topMovies[search].revenue << endl << endl;
    }
    // Ask the user "Do you want to continue? (y/n): "
    cout << "Do you want to continue? (y/n): ";
    // Get the answer
    cin >> answer;
  // Continue looping while the answer is 'y'
    }while (answer == 'y' || answer == 'Y');
  // Close the file
    inFile.close();
// main() ends here
return 0;
}

// Function definitions start here

void storeMoviesArray(ifstream& inFile, Movie topMovies[], const int SIZE)
// This function receives the input file, the movies array, and the size of the 
// array. 
// It reads from the file the movie data and stores it in the array.
// Once all the data has been read in, it returns the array with the information 
// of the movies.
{
  int i = 0;
  while(i < SIZE)
  {
    inFile >> topMovies[i].title >> topMovies[i].yearReleased >> topMovies[i].revenue;
    ++ i;
  }
}


void sortMoviesTitle(Movie topMovies[], const int SIZE)
// This function receives the movies array and the size of the array and sorts
// the array by title. It returns the sorted array.
{
  int i, j;
  Movie temp;
  for(i = 1; i < SIZE; ++i)
  {
    for(j = 0; j < SIZE - i - 1; ++j)
    {
        if(topMovies[j].title > topMovies[j + 1].title)
        {
            temp = topMovies[j];
            topMovies[j] = topMovies[j + 1];
            topMovies[j + 1] = temp;
        }
    }
  }
}

void printMoviesArray(const Movie topMovies[], const int SIZE)
// This function receives the movies array and the size of the array and prints
// the list of movies.
{
  int i;
  cout << setw(38) << "Movie title" << setw(5) << "Year" << setw(13) << "Revenue\n\n";
  for(i = 0; i < SIZE; ++i)
  {
      cout << setw(38) << topMovies[i].title << setw(5) << topMovies[i].yearReleased << setw(2)  << '$' << setw(10)
      << topMovies[i].revenue << endl;
  }
}

int findMovieTitle(const Movie topMovies[], const int SIZE, string title)
// This function receives the movies array, the size of the array, and the title
// of the movie to be searched for.
// It returns the index of the array where the title was found. If the title was 
// not found, it returns -1. It must use BINARY SEARCH to find the movie.
{
  int first = 0, last = SIZE - 1, middle, pos = -1;
  bool found = false;

  while(!found && first <= last)
  {
    middle = (first + last) / 2;
    if(topMovies[middle].title == title)
    {
        pos = middle;
        found = true;
    }
    else if(topMovies[middle].title > title)
    {
        last = middle - 1;
    }
    else
    {
        first = middle + 1;
    }
  }

  return pos;

}